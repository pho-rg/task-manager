var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.68,1,1.361]],["body/components/AppComponent.html",[0,1.045,1,2.093,2,1.646,3,0.386,4,0.331,5,1.478,6,1.478,7,1.478,8,0.331,9,1.997,10,1.153,11,2.672,12,2.949,13,3.494,14,1.919,15,1.466,16,1.919,17,4.443,18,1.525,19,2.109,20,3.494,21,2.109,22,3.494,23,0.386,24,1.042,25,4.074,26,0.445,27,0.043,28,1.7,29,1.027,30,0.916,31,1.215,32,2.85,33,0.508,34,2.448,35,0.854,36,0.576,37,1.7,38,2.448,39,1.646,40,2.109,41,1.646,42,1.308,43,1.168,44,1.308,45,1.153,46,1.027,47,0.386,48,0.331,49,1.153,50,2.109,51,2.109,52,0.916,53,2.682,54,1.478,55,1.081,56,1.478,57,1.153,58,2.109,59,0.818,60,1.153,61,0.818,62,1.301,63,1.478,64,0.027,65,0.027]],["title/injectables/ByStatutTaskListService.html",[66,1.212,67,1.361]],["body/injectables/ByStatutTaskListService.html",[3,0.328,4,0.281,8,0.281,18,1.161,23,0.328,24,0.925,26,0.747,27,0.043,29,0.872,30,0.778,31,1.425,33,0.913,35,0.799,36,0.489,39,0.98,47,0.328,48,0.281,55,0.552,59,1.598,64,0.024,65,0.024,66,1.301,67,1.461,68,1.255,69,3.763,70,2.61,71,1.444,72,1.935,73,3.709,74,3.709,75,1.161,76,2.154,77,1.748,78,3.102,79,2.154,80,1.539,81,2.079,82,0.98,83,0.98,84,1.444,85,0.778,86,1.125,87,2.53,88,2.079,89,2.079,90,1.444,91,1.444,92,1.696,93,1.444,94,0.778,95,1.873,96,2.079,97,1.556,98,0.872,99,1.091,100,2.079,101,1.461,102,2.185,103,2.072,104,3.026,105,2.185,106,2.576,107,2.154,108,1.444,109,0.98,110,2.079,111,2.079,112,1.873,113,1.696,114,1.255,115,2.079,116,1.444,117,2.079,118,1.696,119,3.102,120,2.079,121,2.079,122,2.079,123,1.255]],["title/interfaces/ByStatutTaskServiceInterface.html",[95,1.744,98,1.212]],["body/interfaces/ByStatutTaskServiceInterface.html",[3,0.529,4,0.454,8,0.454,23,0.529,26,0.61,27,0.041,31,1.291,33,0.697,35,0.61,39,1.582,47,0.529,55,0.891,64,0.033,65,0.033,70,2.301,75,1.621,76,3.008,79,3.008,80,1.896,82,1.582,83,1.582,84,2.332,85,1.257,86,1.128,94,1.257,95,2.615,97,2.011,98,1.817,99,0.891,101,1.582,103,1.582,105,1.784,106,2.332,107,2.332,124,2.332,125,3.533,126,2.332,127,2.739,128,2.739]],["title/injectables/CRUDTaskListService.html",[66,1.212,72,1.212]],["body/injectables/CRUDTaskListService.html",[3,0.319,4,0.273,8,0.273,18,1.137,23,0.319,24,0.906,26,0.367,27,0.043,29,0.848,30,0.757,33,0.757,35,0.737,36,0.476,47,0.319,48,0.273,59,1.355,64,0.023,65,0.023,66,1.274,68,1.221,71,1.404,72,1.274,75,1.137,77,1.719,80,1.866,85,0.757,86,1.023,91,1.404,94,0.757,97,1.274,98,0.848,99,0.806,103,0.953,105,1.074,108,1.404,109,0.953,112,1.221,114,1.221,123,1.221,129,3.308,130,2.976,131,3.648,132,2.816,133,2.022,134,2.022,135,3.974,136,3.037,137,3.383,138,3.037,139,3.037,140,2.878,141,2.941,142,2.478,143,3.037,144,1.834,145,2.109,146,3.037,147,2.109,148,3.037,149,3.037,150,3.037,151,3.037,152,3.308,153,3.037,154,3.037,155,3.037,156,3.037,157,2.022,158,1.834,159,2.022,160,2.022,161,2.022,162,2.022,163,2.022,164,2.022,165,2.022,166,2.022,167,2.022,168,2.022]],["title/interfaces/CRUDTaskServiceInterface.html",[98,1.212,158,1.744]],["body/interfaces/CRUDTaskServiceInterface.html",[3,0.583,4,0.5,8,0.5,23,0.583,27,0.042,33,0.767,35,0.672,47,0.583,64,0.035,65,0.035,75,1.723,85,1.384,86,1.18,94,1.384,97,2.103,98,1.931,101,1.742,114,2.232,124,2.567,126,2.567,127,3.016,132,3.644,158,2.779,169,3.755]],["title/components/MainTaskComponent.html",[0,0.68,43,0.965]],["body/components/MainTaskComponent.html",[0,0.87,1,0.798,2,1.54,3,0.267,4,0.229,5,1.023,6,1.023,7,1.023,8,0.229,10,0.798,11,2.363,12,2.569,14,1.249,15,0.711,16,0.798,19,1.601,21,1.601,23,0.267,24,0.791,26,0.729,27,0.043,29,0.711,30,0.634,31,1.197,33,0.923,35,0.672,36,0.399,39,1.249,40,1.023,41,0.798,42,0.634,43,1.236,44,0.993,47,0.267,48,0.229,49,0.798,50,1.601,51,1.601,52,0.634,53,2.232,54,1.023,55,0.867,56,1.023,57,2.095,58,1.601,59,0.886,60,0.798,61,0.566,62,0.9,63,1.023,64,0.02,65,0.02,75,0.993,77,1.54,80,0.634,85,0.634,86,0.944,90,1.177,94,0.634,97,1.113,99,0.45,101,1.54,102,1.409,103,1.249,105,0.9,109,1.249,112,1.601,113,1.382,144,1.023,147,1.177,170,3.755,171,2.779,172,1.382,173,2.269,174,2.163,175,2.163,176,3.268,177,3.268,178,3.268,179,3.268,180,2.423,181,3.016,182,2.652,183,1.694,184,2.163,185,2.132,186,1.694,187,1.694,188,1.54,189,2.652,190,1.694,191,1.694,192,1.382,193,1.382,194,1.382,195,1.382,196,1.382,197,1.694,198,1.694,199,1.694,200,1.694,201,1.842,202,1.177,203,1.694,204,1.382,205,1.694,206,1.694,207,1.694,208,1.694,209,1.694,210,1.694,211,1.177,212,1.694,213,2.163,214,1.694,215,1.694,216,2.652,217,1.694,218,1.694,219,2.652,220,2.652,221,2.652,222,1.694]],["title/components/TaskComponent.html",[0,0.68,42,1.081]],["body/components/TaskComponent.html",[0,1.066,1,1.206,2,1.699,3,0.404,4,0.346,5,1.545,6,1.545,7,1.545,8,0.346,10,1.206,11,2.706,12,2.993,14,1.699,15,1.074,16,1.206,19,2.177,21,2.177,23,0.404,26,0.465,27,0.043,31,1.245,33,0.531,35,0.655,36,0.602,41,1.206,42,1.697,43,0.855,44,0.958,47,0.404,48,0.346,49,1.206,50,2.177,51,2.177,52,0.958,53,2.736,54,1.545,55,1.108,56,1.545,57,1.206,58,2.177,59,0.855,60,1.206,61,1.205,62,1.36,63,1.545,64,0.027,65,0.027,86,0.848,94,0.958,116,1.777,137,2.504,174,2.941,175,2.941,223,2.088,224,2.504,225,3.606,226,2.559,227,2.504,228,2.088,229,1.206,230,2.559,231,3.606,232,2.177,233,3.606,234,2.941,235,3.606,236,3.606]],["title/pipes/TaskDateFormatPipe.html",[229,1.361,237,1.744]],["body/pipes/TaskDateFormatPipe.html",[3,0.469,4,0.402,8,0.402,10,1.402,14,1.884,15,1.248,26,0.541,27,0.043,28,3.138,29,1.248,30,1.497,33,0.617,35,0.727,36,0.7,41,1.402,47,0.469,48,0.402,55,1.199,64,0.03,65,0.03,75,1.114,82,1.402,83,1.402,85,1.114,99,1.061,109,1.402,123,1.796,140,2.401,141,1.796,145,2.066,229,1.884,234,3.263,237,2.728,238,2.427,239,2.777,240,2.427,241,2.975,242,4,243,4.831,244,2.975,245,4,246,4,247,4,248,4,249,4,250,2.066,251,2.975,252,2.427,253,2.975,254,2.975]],["title/injectables/TaskFacadeService.html",[66,1.212,188,1.361]],["body/injectables/TaskFacadeService.html",[0,0.514,3,0.345,4,0.295,8,0.295,18,1.205,23,0.345,24,0.959,26,0.694,27,0.043,29,1.35,30,1.205,31,0.651,33,0.932,35,0.816,36,0.514,39,1.985,46,0.917,47,0.345,48,0.295,55,0.58,59,1.075,64,0.024,65,0.024,66,1.35,67,2.213,68,1.319,70,1.161,72,1.971,75,1.205,76,2.234,77,1.799,79,2.234,80,1.577,82,1.029,83,1.029,84,1.517,85,1.205,86,1.057,87,2.625,90,1.517,91,1.517,92,1.782,93,2.234,94,0.818,97,1.602,99,0.58,101,1.029,102,1.71,103,1.029,104,1.782,105,1.71,106,2.234,107,1.517,108,1.517,112,1.319,114,1.319,118,1.782,123,1.943,128,1.782,132,2.925,145,2.652,188,1.516,195,1.782,201,1.517,204,1.782,211,1.517,232,1.319,255,3.832,256,1.782,257,2.185,258,2.185,259,2.185,260,3.217,261,2.185,262,2.185,263,2.185,264,2.185,265,2.185,266,2.185,267,2.185,268,2.185,269,2.185,270,2.185,271,3.217,272,3.217,273,2.185,274,2.185,275,2.185]],["title/components/TaskListComponent.html",[0,0.68,44,1.081]],["body/components/TaskListComponent.html",[0,1.05,1,1.165,2,1.658,3,0.39,4,0.334,5,1.493,6,1.493,7,1.493,8,0.334,10,1.165,11,2.68,12,2.959,14,1.658,15,1.037,16,1.165,19,2.125,21,2.125,23,0.646,26,0.449,27,0.043,31,1.564,33,0.513,35,0.64,36,0.582,41,1.165,42,1.317,43,0.827,44,1.671,47,0.39,48,0.334,49,1.165,50,2.125,51,2.125,52,0.926,53,2.695,54,1.493,55,1.087,56,1.493,57,1.165,58,2.125,59,1.369,60,1.165,61,0.827,62,1.314,63,1.493,64,0.027,65,0.027,99,0.934,102,1.314,173,1.717,185,2.177,192,2.017,224,2.444,227,2.444,276,2.871,277,2.444,278,2.017,279,3.519,280,3.519,281,4.097,282,2.473,283,1.717,284,3.519,285,3.519]],["title/classes/TaskListModel.html",[48,0.39,185,1.535]],["body/classes/TaskListModel.html",[3,0.544,4,0.467,8,0.467,23,0.544,24,1.315,26,0.801,27,0.043,33,0.915,35,0.628,47,0.544,48,0.467,55,0.916,64,0.033,65,0.033,77,1.627,82,1.627,83,1.627,86,1.244,99,1.17,102,1.835,180,2.933,185,2.72,213,2.817,283,2.398,286,2.398,287,2.817,288,3.453,289,4.409,290,3.453,291,3.453,292,3.453]],["title/classes/TaskModel.html",[48,0.39,86,0.68]],["body/classes/TaskModel.html",[3,0.493,4,0.423,8,0.423,23,0.493,24,1.233,26,0.896,27,0.044,28,3.423,33,1.023,40,1.889,47,0.652,48,0.423,64,0.031,65,0.031,80,2.011,86,0.973,135,3.779,137,3.217,140,2.724,144,1.889,202,2.172,283,2.172,286,2.172,293,2.172,294,3.128,295,3.128,296,3.128,297,3.128,298,3.128,299,2.552,300,3.128,301,3.128,302,2.552,303,2.552,304,2.552,305,2.552]],["title/directives/TaskStateColorDirective.html",[52,1.081,61,0.965]],["body/directives/TaskStateColorDirective.html",[3,0.381,4,0.326,8,0.326,10,1.138,11,1.839,14,1.63,15,1.013,23,0.381,24,1.032,26,0.735,27,0.042,33,0.916,35,0.629,36,0.568,41,1.138,47,0.381,48,0.326,52,1.514,55,0.641,60,1.138,61,1.157,62,2.484,64,0.026,65,0.026,75,1.296,77,1.138,80,0.904,82,1.138,83,1.138,85,0.904,86,0.951,94,0.904,99,0.918,109,1.63,116,1.677,130,2.823,142,1.971,147,1.677,152,1.971,173,2.808,181,3.602,184,2.823,224,2.403,227,2.403,228,1.971,239,3.246,306,3.246,307,1.971,308,4.416,309,2.416,310,4.674,311,4.044,312,4.416,313,3.461,314,2.416,315,2.416,316,2.416,317,2.416,318,2.416,319,2.416,320,2.416,321,4.044,322,4.044,323,4.044,324,4.044,325,2.416,326,4.044,327,2.416,328,2.416]],["title/modules/TasksModule.html",[18,1.081,46,1.212]],["body/modules/TasksModule.html",[2,1.011,3,0.338,4,0.29,8,0.29,16,1.496,18,2.107,27,0.043,31,0.947,35,0.95,36,0.505,39,1.011,42,1.747,43,1.56,44,1.747,45,1.011,46,1.332,47,0.338,48,0.29,49,1.011,57,1.011,59,1.061,60,1.011,61,1.56,64,0.024,65,0.024,67,2.199,70,1.141,72,1.958,93,2.205,99,0.843,103,1.011,140,1.141,171,1.296,180,1.296,188,2.199,193,1.751,194,1.751,196,1.751,211,1.491,229,2.199,238,1.751,250,1.491,277,1.491,306,1.491,329,1.296,330,3.083,331,1.751,332,2.624,333,1.491,334,1.751,335,1.751,336,1.751,337,1.751,338,2.48,339,2.59,340,1.751,341,1.491,342,2.147,343,2.59,344,3.176,345,2.147,346,2.147,347,2.147,348,1.751,349,3.176,350,2.147,351,2.147,352,2.147,353,2.147,354,2.147]],["title/modules/TasksRoutingModule.html",[46,1.212,338,1.535]],["body/modules/TasksRoutingModule.html",[0,0.824,3,0.552,4,0.473,8,0.473,16,1.65,27,0.043,35,0.889,36,0.824,37,2.432,43,1.487,45,1.65,46,1.469,47,0.552,48,0.473,57,1.65,64,0.034,65,0.034,171,2.114,180,2.114,232,2.114,252,2.857,299,2.857,333,2.432,338,2.364,343,3.63,348,2.857,355,3.502,356,3.502,357,4.45,358,4.891,359,3.502,360,3.502,361,3.502]],["title/coverage.html",[362,3.198]],["body/coverage.html",[0,1.083,1,1.249,8,0.358,9,2.163,26,0.482,27,0.043,31,1.102,42,0.993,43,0.886,44,0.993,48,0.5,52,0.993,59,1.236,61,0.886,64,0.028,65,0.028,66,1.785,67,1.249,69,2.163,70,1.964,71,2.567,72,1.113,86,0.624,95,1.601,97,1.551,98,1.551,125,2.163,126,2.567,129,2.163,140,1.409,141,1.601,158,1.601,169,2.163,170,2.163,171,1.601,172,2.163,185,1.409,188,1.249,223,2.163,229,1.249,237,1.601,239,2.567,240,2.163,255,2.163,256,2.163,276,2.163,277,1.842,278,2.163,287,2.163,293,1.842,306,1.842,307,2.163,362,2.163,363,2.652,364,2.652,365,2.652,366,5.581,367,4.841,368,2.163,369,2.652,370,2.163,371,3.697,372,2.652,373,3.697,374,2.652,375,3.697,376,2.652,377,2.652,378,2.652]],["title/dependencies.html",[329,2.094,379,1.682]],["body/dependencies.html",[27,0.044,36,0.865,37,2.554,64,0.035,65,0.035,250,2.554,329,2.221,380,3.678,381,5.636,382,3.678,383,3.678,384,4.589,385,3.744,386,3.678,387,3.678,388,3.678,389,3.678,390,3.678,391,3.678,392,3.678]],["title/miscellaneous/enumerations.html",[393,1.463,394,2.829]],["body/miscellaneous/enumerations.html",[23,0.631,27,0.043,30,1.943,40,2.415,64,0.037,65,0.037,80,1.809,144,2.415,202,2.777,293,2.777,302,3.263,303,3.263,304,3.263,305,3.263,393,2.415,394,3.263,395,4]],["title/index.html",[23,0.382,396,2.423,397,2.423]],["body/index.html",[0,0.919,4,0.307,27,0.025,31,0.678,32,1.854,55,0.603,64,0.025,65,0.025,99,1.037,101,1.071,109,1.071,141,1.372,201,1.578,232,1.372,341,1.578,379,1.578,398,2.273,399,3.312,400,2.273,401,3.907,402,3.907,403,1.854,404,3.312,405,2.273,406,2.273,407,2.273,408,3.312,409,3.312,410,3.312,411,3.312,412,2.273,413,4.293,414,2.273,415,3.907,416,2.273,417,2.273,418,3.312,419,2.273,420,2.273,421,2.273,422,2.273,423,2.273,424,4.293,425,2.273,426,2.273,427,2.273,428,5.039,429,3.312,430,3.312,431,2.273,432,2.273,433,3.312,434,3.312,435,2.273,436,2.273,437,2.273,438,2.273,439,4.763,440,2.273,441,3.312,442,2.273,443,2.273,444,2.273,445,2.273,446,2.273,447,2.273,448,2.273,449,2.273,450,2.273,451,3.907,452,3.907,453,2.273,454,4.293,455,2.273,456,2.273,457,2.273,458,2.273,459,3.312,460,3.312,461,4.293,462,2.273,463,3.312,464,3.312,465,2.273,466,4.763,467,2.273,468,2.273,469,2.273,470,3.312,471,2.273,472,2.273,473,2.273,474,2.273,475,2.273,476,3.907,477,2.273,478,2.273,479,2.273,480,1.578,481,2.273,482,2.273]],["title/modules.html",[45,1.847]],["body/modules.html",[18,1.593,27,0.038,45,2.005,64,0.038,65,0.038,338,2.261,385,3.472,483,4.256,484,4.256,485,5.013,486,4.256,487,4.256]],["title/overview.html",[480,2.722]],["body/overview.html",[2,1.391,18,2.168,27,0.042,42,1.685,43,1.504,44,1.685,45,1.391,46,1.238,49,1.391,52,1.105,61,1.504,64,0.03,65,0.03,67,2.12,68,1.782,72,1.888,124,2.05,188,2.12,229,2.12,237,1.782,286,2.05,329,1.782,330,2.408,331,2.408,332,2.05,333,2.05,334,2.408,335,2.408,336,2.408,337,2.408,338,2.391,339,3.245,340,2.408,341,2.05,480,2.05,488,4.5,489,2.951,490,3.978,491,2.951]],["title/properties.html",[24,1.034,379,1.682]],["body/properties.html",[24,1.315,27,0.041,64,0.039,65,0.039,403,3.597,492,4.409]],["title/miscellaneous/variables.html",[393,1.463,493,2.829]],["body/miscellaneous/variables.html",[15,1.678,23,0.631,26,0.727,27,0.043,29,1.678,30,1.497,64,0.037,65,0.037,332,2.777,368,3.263,370,3.941,393,2.415,493,3.263,494,4,495,4,496,4,497,4,498,4]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":492,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":490,"title":{},"body":{"overview.html":{}}}],["10.8.1",{"_index":414,"title":{},"body":{"index.html":{}}}],["18.2.0",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["18.2.2",{"_index":404,"title":{},"body":{"index.html":{}}}],["2",{"_index":488,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["20.16.0",{"_index":412,"title":{},"body":{"index.html":{}}}],["3",{"_index":491,"title":{},"body":{"overview.html":{}}}],["4",{"_index":489,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["a_faire",{"_index":303,"title":{},"body":{"classes/TaskModel.html":{},"miscellaneous/enumerations.html":{}}}],["actual_component",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["add",{"_index":433,"title":{},"body":{"index.html":{}}}],["ajouter",{"_index":436,"title":{},"body":{"index.html":{}}}],["angular",{"_index":401,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":419,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":250,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/TasksRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["app.component.css",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":370,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appel",{"_index":207,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["application",{"_index":444,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apptaskstatecolor",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStateColorDirective.html":{}}}],["architecture",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"components/TaskListComponent.html":{},"directives/TaskStateColorDirective.html":{}}}],["archivedtasklist",{"_index":176,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["archivedtasks",{"_index":177,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["artifacts",{"_index":455,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":445,"title":{},"body":{"index.html":{}}}],["available",{"_index":487,"title":{},"body":{"modules.html":{}}}],["avec",{"_index":422,"title":{},"body":{"index.html":{}}}],["background",{"_index":323,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["banque",{"_index":136,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["basant",{"_index":199,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["besoins",{"_index":265,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["bootstrap",{"_index":331,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["break",{"_index":326,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["bricolage",{"_index":148,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["browse",{"_index":485,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":385,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":454,"title":{},"body":{"index.html":{}}}],["bystatuttasklistservice",{"_index":67,"title":{"injectables/ByStatutTaskListService.html":{}},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/TaskFacadeService.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["bystatuttaskserviceinterface",{"_index":95,"title":{"interfaces/ByStatutTaskServiceInterface.html":{}},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"coverage.html":{}}}],["capabilities",{"_index":474,"title":{},"body":{"index.html":{}}}],["case",{"_index":321,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["ce",{"_index":208,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["chacun",{"_index":270,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["change",{"_index":447,"title":{},"body":{"index.html":{}}}],["check",{"_index":479,"title":{},"body":{"index.html":{}}}],["choice",{"_index":469,"title":{},"body":{"index.html":{}}}],["class",{"_index":48,"title":{"classes/TaskListModel.html":{},"classes/TaskModel.html":{}},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["classes",{"_index":286,"title":{},"body":{"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"overview.html":{}}}],["cli",{"_index":402,"title":{},"body":{"index.html":{}}}],["clientnpm",{"_index":417,"title":{},"body":{"index.html":{}}}],["cluster_tasksmodule",{"_index":334,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declarations",{"_index":335,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":337,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":336,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["code",{"_index":449,"title":{},"body":{"index.html":{}}}],["color",{"_index":324,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["color.directive",{"_index":350,"title":{},"body":{"modules/TasksModule.html":{}}}],["color.directive.ts",{"_index":307,"title":{},"body":{"directives/TaskStateColorDirective.html":{},"coverage.html":{}}}],["color.directive.ts:11",{"_index":313,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["color.directive.ts:12",{"_index":315,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["color.directive.ts:14",{"_index":314,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["coloration",{"_index":316,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["command",{"_index":470,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":344,"title":{},"body":{"modules/TasksModule.html":{}}}],["complète",{"_index":273,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["compodoc",{"_index":430,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":435,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["const",{"_index":252,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{},"modules/TasksRoutingModule.html":{}}}],["constructor",{"_index":77,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{},"classes/TaskListModel.html":{},"directives/TaskStateColorDirective.html":{}}}],["constructor(elref",{"_index":309,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["constructor(public",{"_index":318,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["constructor(tasklistmodel",{"_index":288,"title":{},"body":{"classes/TaskListModel.html":{}}}],["constructor(tasklistmodel:taskmodel",{"_index":292,"title":{},"body":{"classes/TaskListModel.html":{}}}],["cours",{"_index":202,"title":{},"body":{"components/MainTaskComponent.html":{},"classes/TaskModel.html":{},"miscellaneous/enumerations.html":{}}}],["coverage",{"_index":362,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crud",{"_index":114,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"injectables/TaskFacadeService.html":{}}}],["crudtask",{"_index":92,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/TaskFacadeService.html":{}}}],["crudtasklistservice",{"_index":72,"title":{"injectables/CRUDTaskListService.html":{}},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"injectables/TaskFacadeService.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["crudtaskserviceinterface",{"_index":158,"title":{"interfaces/CRUDTaskServiceInterface.html":{}},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"coverage.html":{}}}],["création",{"_index":420,"title":{},"body":{"index.html":{}}}],["currenttask",{"_index":225,"title":{},"body":{"components/TaskComponent.html":{}}}],["currenttask!:taskmodel",{"_index":230,"title":{},"body":{"components/TaskComponent.html":{}}}],["currenttask.date",{"_index":233,"title":{},"body":{"components/TaskComponent.html":{}}}],["currenttask.description",{"_index":235,"title":{},"body":{"components/TaskComponent.html":{}}}],["currenttask.etat",{"_index":236,"title":{},"body":{"components/TaskComponent.html":{}}}],["currenttask.titre",{"_index":231,"title":{},"body":{"components/TaskComponent.html":{}}}],["currenttasklist",{"_index":281,"title":{},"body":{"components/TaskListComponent.html":{}}}],["currenttasklist.tasks",{"_index":284,"title":{},"body":{"components/TaskListComponent.html":{}}}],["d'angular",{"_index":416,"title":{},"body":{"index.html":{}}}],["d'une",{"_index":116,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"components/TaskComponent.html":{},"directives/TaskStateColorDirective.html":{}}}],["data",{"_index":131,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["date",{"_index":140,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"pipes/TaskDateFormatPipe.html":{},"classes/TaskModel.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["datepipe",{"_index":249,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{}}}],["datepipe('en",{"_index":253,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{}}}],["datepipe.transform(value",{"_index":254,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{}}}],["dd",{"_index":245,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{}}}],["de",{"_index":99,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["declarations",{"_index":330,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["default",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{}}}],["delete",{"_index":167,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["deletetask",{"_index":168,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["demarrage",{"_index":425,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":329,"title":{"dependencies.html":{}},"body":{"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dernier",{"_index":209,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["des",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{},"modules/TasksModule.html":{}}}],["description",{"_index":137,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"components/TaskComponent.html":{},"classes/TaskModel.html":{}}}],["dev",{"_index":434,"title":{},"body":{"index.html":{}}}],["development",{"_index":440,"title":{},"body":{"index.html":{}}}],["devis",{"_index":154,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["directive",{"_index":52,"title":{"directives/TaskStateColorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStateColorDirective.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":453,"title":{},"body":{"index.html":{}}}],["directory",{"_index":458,"title":{},"body":{"index.html":{}}}],["dist",{"_index":457,"title":{},"body":{"index.html":{}}}],["diter",{"_index":139,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["doc",{"_index":432,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["données",{"_index":161,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["du",{"_index":101,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{},"index.html":{}}}],["dumb",{"_index":200,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["dynamic",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["déj",{"_index":409,"title":{},"body":{"index.html":{}}}],["démarrer",{"_index":438,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":467,"title":{},"body":{"index.html":{}}}],["element",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["elementref",{"_index":310,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["elref",{"_index":308,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["en",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"classes/TaskModel.html":{},"miscellaneous/enumerations.html":{}}}],["en_cours",{"_index":302,"title":{},"body":{"classes/TaskModel.html":{},"miscellaneous/enumerations.html":{}}}],["encore",{"_index":219,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["end",{"_index":466,"title":{},"body":{"index.html":{}}}],["enum",{"_index":301,"title":{},"body":{"classes/TaskModel.html":{}}}],["enumerations",{"_index":394,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["et",{"_index":201,"title":{},"body":{"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{},"index.html":{}}}],["etat",{"_index":80,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{},"miscellaneous/enumerations.html":{}}}],["etat.a_faire",{"_index":142,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"directives/TaskStateColorDirective.html":{}}}],["etat.en_cours",{"_index":147,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"directives/TaskStateColorDirective.html":{}}}],["etat.terminee",{"_index":152,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"directives/TaskStateColorDirective.html":{}}}],["etats",{"_index":84,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/TaskFacadeService.html":{}}}],["eventcoalescing",{"_index":497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":463,"title":{},"body":{"index.html":{}}}],["export",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["exports",{"_index":333,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"overview.html":{}}}],["facade",{"_index":204,"title":{},"body":{"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{}}}],["facade.service",{"_index":194,"title":{},"body":{"components/MainTaskComponent.html":{},"modules/TasksModule.html":{}}}],["facade.service.ts",{"_index":256,"title":{},"body":{"injectables/TaskFacadeService.html":{},"coverage.html":{}}}],["facade.service.ts:14",{"_index":262,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["facade.service.ts:16",{"_index":261,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["facade.service.ts:19",{"_index":258,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["facade.service.ts:24",{"_index":259,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["facade.service.ts:26",{"_index":257,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["faire",{"_index":144,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"classes/TaskModel.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["files",{"_index":448,"title":{},"body":{"index.html":{}}}],["filtre",{"_index":128,"title":{},"body":{"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/TaskFacadeService.html":{}}}],["filtrées",{"_index":104,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/TaskFacadeService.html":{}}}],["first",{"_index":472,"title":{},"body":{"index.html":{}}}],["format",{"_index":243,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{}}}],["format.pipe",{"_index":351,"title":{},"body":{"modules/TasksModule.html":{}}}],["format.pipe.ts",{"_index":240,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{},"coverage.html":{}}}],["format.pipe.ts:12",{"_index":244,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{}}}],["formatage",{"_index":251,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{}}}],["further",{"_index":475,"title":{},"body":{"index.html":{}}}],["g",{"_index":418,"title":{},"body":{"index.html":{}}}],["generate",{"_index":451,"title":{},"body":{"index.html":{}}}],["generated",{"_index":400,"title":{},"body":{"index.html":{}}}],["gestion",{"_index":196,"title":{},"body":{"components/MainTaskComponent.html":{},"modules/TasksModule.html":{}}}],["getdata",{"_index":132,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"injectables/TaskFacadeService.html":{}}}],["gettasklistbystatut",{"_index":76,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/TaskFacadeService.html":{}}}],["gettasklistbystatut(etats",{"_index":79,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/TaskFacadeService.html":{}}}],["getting",{"_index":396,"title":{"index.html":{}},"body":{}}],["go",{"_index":478,"title":{},"body":{"index.html":{}}}],["graph",{"_index":486,"title":{},"body":{"modules.html":{}}}],["green",{"_index":328,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["génération",{"_index":431,"title":{},"body":{"index.html":{}}}],["help",{"_index":476,"title":{},"body":{"index.html":{}}}],["html",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["http://localhost:4200",{"_index":443,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["if(etats.includes(task.etat",{"_index":121,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["implements",{"_index":109,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"directives/TaskStateColorDirective.html":{},"index.html":{}}}],["implémentation",{"_index":113,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"components/MainTaskComponent.html":{}}}],["import",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["inject",{"_index":90,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{}}}],["inject(bystatuttasklistservice",{"_index":260,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["inject(crudtasklistservice",{"_index":87,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/TaskFacadeService.html":{}}}],["inject(taskfacadeservice",{"_index":189,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["injectable",{"_index":66,"title":{"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"injectables/TaskFacadeService.html":{}},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"injectables/TaskFacadeService.html":{},"coverage.html":{}}}],["injectables",{"_index":68,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"injectables/TaskFacadeService.html":{},"overview.html":{}}}],["input",{"_index":227,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStateColorDirective.html":{}}}],["inputs",{"_index":224,"title":{},"body":{"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStateColorDirective.html":{}}}],["install",{"_index":410,"title":{},"body":{"index.html":{}}}],["installation",{"_index":415,"title":{},"body":{"index.html":{}}}],["interface",{"_index":98,"title":{"interfaces/ByStatutTaskServiceInterface.html":{},"interfaces/CRUDTaskServiceInterface.html":{}},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"coverage.html":{}}}],["interface.ts",{"_index":126,"title":{},"body":{"interfaces/ByStatutTaskServiceInterface.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"coverage.html":{}}}],["interface.ts:5",{"_index":127,"title":{},"body":{"interfaces/ByStatutTaskServiceInterface.html":{},"interfaces/CRUDTaskServiceInterface.html":{}}}],["interface/by",{"_index":96,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["interface/crudtask",{"_index":159,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["interfaces",{"_index":124,"title":{},"body":{"interfaces/ByStatutTaskServiceInterface.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"overview.html":{}}}],["jeu",{"_index":160,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["karma",{"_index":465,"title":{},"body":{"index.html":{}}}],["l'app",{"_index":427,"title":{},"body":{"index.html":{}}}],["l'état",{"_index":317,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["la",{"_index":145,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{}}}],["lancer",{"_index":426,"title":{},"body":{"index.html":{}}}],["le",{"_index":232,"title":{},"body":{"components/TaskComponent.html":{},"injectables/TaskFacadeService.html":{},"modules/TasksRoutingModule.html":{},"index.html":{}}}],["legend",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["les",{"_index":112,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{}}}],["leur",{"_index":106,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/TaskFacadeService.html":{}}}],["list",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["list.component",{"_index":347,"title":{},"body":{"modules/TasksModule.html":{}}}],["list.component.css",{"_index":280,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.html",{"_index":279,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.component.ts",{"_index":278,"title":{},"body":{"components/TaskListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":282,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list/task",{"_index":277,"title":{},"body":{"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["liste",{"_index":102,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{}}}],["listes",{"_index":354,"title":{},"body":{"modules/TasksModule.html":{}}}],["main",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["maintaskcomponent",{"_index":43,"title":{"components/MainTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["manager",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["matching",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"components/TaskListComponent.html":{},"directives/TaskStateColorDirective.html":{}}}],["methods",{"_index":75,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"directives/TaskStateColorDirective.html":{}}}],["meubles",{"_index":150,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["miscellaneous",{"_index":393,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mitoyen",{"_index":156,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["mm",{"_index":246,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{}}}],["model/task.model",{"_index":94,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskFacadeService.html":{},"directives/TaskStateColorDirective.html":{}}}],["model/tasklist.model",{"_index":192,"title":{},"body":{"components/MainTaskComponent.html":{},"components/TaskListComponent.html":{}}}],["modele",{"_index":291,"title":{},"body":{"classes/TaskListModel.html":{}}}],["module",{"_index":46,"title":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}},"body":{"components/AppComponent.html":{},"injectables/TaskFacadeService.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"overview.html":{}}}],["modules",{"_index":45,"title":{"modules.html":{}},"body":{"components/AppComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["monter",{"_index":149,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["more",{"_index":477,"title":{},"body":{"index.html":{}}}],["mur",{"_index":155,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["métier",{"_index":197,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"directives/TaskStateColorDirective.html":{},"index.html":{}}}],["navigate",{"_index":442,"title":{},"body":{"index.html":{}}}],["ne",{"_index":266,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["need",{"_index":471,"title":{},"body":{"index.html":{}}}],["new",{"_index":141,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"pipes/TaskDateFormatPipe.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":428,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":343,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["ngoninit",{"_index":181,"title":{},"body":{"components/MainTaskComponent.html":{},"directives/TaskStateColorDirective.html":{}}}],["node",{"_index":408,"title":{},"body":{"index.html":{}}}],["notes",{"_index":405,"title":{},"body":{"index.html":{}}}],["npm",{"_index":413,"title":{},"body":{"index.html":{}}}],["nécessaire",{"_index":212,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["obtenir",{"_index":272,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["obtention",{"_index":115,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["oninit",{"_index":173,"title":{},"body":{"components/MainTaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStateColorDirective.html":{}}}],["optional",{"_index":83,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"classes/TaskListModel.html":{},"directives/TaskStateColorDirective.html":{}}}],["out",{"_index":341,"title":{},"body":{"modules/TasksModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":480,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":379,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":482,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":82,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"classes/TaskListModel.html":{},"directives/TaskStateColorDirective.html":{}}}],["path",{"_index":359,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["personnelles",{"_index":406,"title":{},"body":{"index.html":{}}}],["phpstorm",{"_index":423,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":237,"title":{"pipes/TaskDateFormatPipe.html":{}},"body":{"pipes/TaskDateFormatPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":238,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{},"modules/TasksModule.html":{}}}],["pipetransform",{"_index":248,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{}}}],["platform",{"_index":468,"title":{},"body":{"index.html":{}}}],["plus",{"_index":269,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["possible",{"_index":298,"title":{},"body":{"classes/TaskModel.html":{}}}],["post",{"_index":163,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["posttask",{"_index":164,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["pour",{"_index":299,"title":{},"body":{"classes/TaskModel.html":{},"modules/TasksRoutingModule.html":{}}}],["private",{"_index":319,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["project",{"_index":399,"title":{},"body":{"index.html":{}}}],["projet",{"_index":421,"title":{},"body":{"index.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{},"properties.html":{}}}],["providedin",{"_index":108,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"injectables/TaskFacadeService.html":{}}}],["providerouter(routes",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":332,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prérequis",{"_index":407,"title":{},"body":{"index.html":{}}}],["public",{"_index":130,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"directives/TaskStateColorDirective.html":{}}}],["put",{"_index":165,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["puttask",{"_index":166,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["que",{"_index":268,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["red",{"_index":325,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["reference",{"_index":481,"title":{},"body":{"index.html":{}}}],["regroupant",{"_index":263,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["regroupe",{"_index":210,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["reload",{"_index":446,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":311,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["renderer2",{"_index":312,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["reset",{"_index":340,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["results",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":123,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{}}}],["returns",{"_index":85,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"directives/TaskStateColorDirective.html":{}}}],["rib",{"_index":138,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["routermodule",{"_index":357,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":361,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":358,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["routing",{"_index":360,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["routing.module",{"_index":345,"title":{},"body":{"modules/TasksModule.html":{}}}],["routing.module.ts",{"_index":356,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["run",{"_index":439,"title":{},"body":{"index.html":{}}}],["running",{"_index":459,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["récupération",{"_index":100,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["sbd",{"_index":151,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["scaffolding",{"_index":450,"title":{},"body":{"index.html":{}}}],["script",{"_index":437,"title":{},"body":{"index.html":{}}}],["se",{"_index":198,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStateColorDirective.html":{}}}],["serve",{"_index":429,"title":{},"body":{"index.html":{}}}],["server",{"_index":441,"title":{},"body":{"index.html":{}}}],["service",{"_index":97,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{},"coverage.html":{}}}],["service.service",{"_index":93,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/TaskFacadeService.html":{},"modules/TasksModule.html":{}}}],["service.service.ts",{"_index":71,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"coverage.html":{}}}],["service.service.ts:12",{"_index":157,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["service.service.ts:14",{"_index":89,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["service.service.ts:16",{"_index":88,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["service.service.ts:17",{"_index":133,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["service.service.ts:20",{"_index":78,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["service.service.ts:22",{"_index":134,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["service.service.ts:26",{"_index":81,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["service/by",{"_index":353,"title":{},"body":{"modules/TasksModule.html":{}}}],["service/crudtask",{"_index":352,"title":{},"body":{"modules/TasksModule.html":{}}}],["service/task",{"_index":193,"title":{},"body":{"components/MainTaskComponent.html":{},"modules/TasksModule.html":{}}}],["services",{"_index":211,"title":{},"body":{"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{},"modules/TasksModule.html":{}}}],["seul",{"_index":206,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["smart",{"_index":195,"title":{},"body":{"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{}}}],["sollicite",{"_index":267,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"index.html":{}}}],["src/.../app.config.ts",{"_index":494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.model.ts",{"_index":395,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":368,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/tasks/interface/by",{"_index":125,"title":{},"body":{"interfaces/ByStatutTaskServiceInterface.html":{},"coverage.html":{}}}],["src/app/tasks/interface/crudtask",{"_index":169,"title":{},"body":{"interfaces/CRUDTaskServiceInterface.html":{},"coverage.html":{}}}],["src/app/tasks/main",{"_index":170,"title":{},"body":{"components/MainTaskComponent.html":{},"coverage.html":{}}}],["src/app/tasks/model/task.model.ts",{"_index":293,"title":{},"body":{"classes/TaskModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tasks/model/task.model.ts:4",{"_index":297,"title":{},"body":{"classes/TaskModel.html":{}}}],["src/app/tasks/model/task.model.ts:5",{"_index":295,"title":{},"body":{"classes/TaskModel.html":{}}}],["src/app/tasks/model/task.model.ts:6",{"_index":294,"title":{},"body":{"classes/TaskModel.html":{}}}],["src/app/tasks/model/task.model.ts:7",{"_index":296,"title":{},"body":{"classes/TaskModel.html":{}}}],["src/app/tasks/model/tasklist.model.ts",{"_index":287,"title":{},"body":{"classes/TaskListModel.html":{},"coverage.html":{}}}],["src/app/tasks/model/tasklist.model.ts:5",{"_index":289,"title":{},"body":{"classes/TaskListModel.html":{}}}],["src/app/tasks/service/by",{"_index":69,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"coverage.html":{}}}],["src/app/tasks/service/crudtask",{"_index":129,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"coverage.html":{}}}],["src/app/tasks/service/task",{"_index":255,"title":{},"body":{"injectables/TaskFacadeService.html":{},"coverage.html":{}}}],["src/app/tasks/task",{"_index":276,"title":{},"body":{"components/TaskListComponent.html":{},"coverage.html":{}}}],["src/app/tasks/task/task",{"_index":239,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{},"directives/TaskStateColorDirective.html":{},"coverage.html":{}}}],["src/app/tasks/task/task.component.ts",{"_index":223,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{}}}],["src/app/tasks/task/task.component.ts:15",{"_index":226,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/tasks/tasks",{"_index":355,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["src/app/tasks/tasks.module.ts",{"_index":342,"title":{},"body":{"modules/TasksModule.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"components/TaskListComponent.html":{},"directives/TaskStateColorDirective.html":{}}}],["started",{"_index":397,"title":{"index.html":{}},"body":{}}],["state",{"_index":306,"title":{},"body":{"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["statements",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["statut",{"_index":70,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/TaskFacadeService.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["statut(s",{"_index":274,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["stored",{"_index":456,"title":{},"body":{"index.html":{}}}],["string",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"classes/TaskModel.html":{}}}],["styleurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["support",{"_index":483,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":105,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{}}}],["svg",{"_index":484,"title":{},"body":{"modules.html":{}}}],["switch(this.apptaskstatecolor.etat",{"_index":320,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["table",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["tache",{"_index":283,"title":{},"body":{"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{}}}],["taches",{"_index":271,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["task",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{},"index.html":{}}}],["task'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["task.component",{"_index":348,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["task.component.css",{"_index":175,"title":{},"body":{"components/MainTaskComponent.html":{},"components/TaskComponent.html":{}}}],["task.component.html",{"_index":174,"title":{},"body":{"components/MainTaskComponent.html":{},"components/TaskComponent.html":{}}}],["task.component.ts",{"_index":172,"title":{},"body":{"components/MainTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:20",{"_index":190,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["task.component.ts:21",{"_index":191,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["task.component.ts:24",{"_index":186,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["task.component.ts:25",{"_index":187,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["task.component.ts:28",{"_index":182,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["task.component.ts:32",{"_index":183,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["task.model",{"_index":290,"title":{},"body":{"classes/TaskListModel.html":{}}}],["task/main",{"_index":171,"title":{},"body":{"components/MainTaskComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["task/task",{"_index":349,"title":{},"body":{"modules/TasksModule.html":{}}}],["task/task.component",{"_index":346,"title":{},"body":{"modules/TasksModule.html":{}}}],["taskcomponent",{"_index":42,"title":{"components/TaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["taskdateformat",{"_index":234,"title":{},"body":{"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{}}}],["taskdateformatpipe",{"_index":229,"title":{"pipes/TaskDateFormatPipe.html":{}},"body":{"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["taskfacade",{"_index":178,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["taskfacadeservice",{"_index":188,"title":{"injectables/TaskFacadeService.html":{}},"body":{"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasklist",{"_index":179,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["tasklistcomponent",{"_index":44,"title":{"components/TaskListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasklistmodel",{"_index":185,"title":{"classes/TaskListModel.html":{}},"body":{"components/MainTaskComponent.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"coverage.html":{}}}],["taskmanager",{"_index":398,"title":{},"body":{"index.html":{}}}],["taskmodel",{"_index":86,"title":{"classes/TaskModel.html":{}},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"interfaces/CRUDTaskServiceInterface.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskFacadeService.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{},"coverage.html":{}}}],["tasks",{"_index":180,"title":{},"body":{"components/MainTaskComponent.html":{},"classes/TaskListModel.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["tasks.module",{"_index":91,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"injectables/TaskFacadeService.html":{}}}],["tasks/tasks.module",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["tasksbystatus",{"_index":73,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["tasksmodule",{"_index":18,"title":{"modules/TasksModule.html":{}},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"injectables/TaskFacadeService.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksroutingmodule",{"_index":338,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["taskstatecolordirective",{"_index":61,"title":{"directives/TaskStateColorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{},"directives/TaskStateColorDirective.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["tat",{"_index":107,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/TaskFacadeService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["temporaire",{"_index":110,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["temptasklist",{"_index":74,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["termin",{"_index":221,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["terminee",{"_index":304,"title":{},"body":{"classes/TaskModel.html":{},"miscellaneous/enumerations.html":{}}}],["terminée",{"_index":305,"title":{},"body":{"classes/TaskModel.html":{},"miscellaneous/enumerations.html":{}}}],["terminées",{"_index":203,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["test",{"_index":462,"title":{},"body":{"index.html":{}}}],["testing",{"_index":473,"title":{},"body":{"index.html":{}}}],["tests",{"_index":461,"title":{},"body":{"index.html":{}}}],["this.archivedtasklist",{"_index":218,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["this.archivedtasks",{"_index":216,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["this.bystatuttasklistservice.gettasklistbystatut(etats",{"_index":275,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["this.crudtasklistservice.getdata",{"_index":118,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"injectables/TaskFacadeService.html":{}}}],["this.data",{"_index":162,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["this.renderer.setstyle(this.elref.nativeelement",{"_index":322,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["this.taskfacade.gettasklistbystatut([etat.a_faire",{"_index":214,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["this.taskfacade.gettasklistbystatut([etat.terminee",{"_index":217,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["this.tasklist",{"_index":215,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["this.tasks",{"_index":213,"title":{},"body":{"components/MainTaskComponent.html":{},"classes/TaskListModel.html":{}}}],["this.tasksbystatus",{"_index":119,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["this.tasksbystatus.push(task",{"_index":122,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["this.temptasklist",{"_index":117,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["this.temptasklist.foreach(task",{"_index":120,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["titre",{"_index":135,"title":{},"body":{"injectables/CRUDTaskListService.html":{},"classes/TaskModel.html":{}}}],["tous",{"_index":264,"title":{},"body":{"injectables/TaskFacadeService.html":{}}}],["toutes",{"_index":111,"title":{},"body":{"injectables/ByStatutTaskListService.html":{}}}],["track",{"_index":285,"title":{},"body":{"components/TaskListComponent.html":{}}}],["transform",{"_index":241,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{}}}],["transform(value",{"_index":242,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{}}}],["travail",{"_index":220,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["travailtravail",{"_index":222,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"components/TaskListComponent.html":{},"directives/TaskStateColorDirective.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"components/TaskListComponent.html":{},"classes/TaskListModel.html":{},"classes/TaskModel.html":{},"directives/TaskStateColorDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tâche",{"_index":228,"title":{},"body":{"components/TaskComponent.html":{},"directives/TaskStateColorDirective.html":{}}}],["tâches",{"_index":103,"title":{},"body":{"injectables/ByStatutTaskListService.html":{},"interfaces/ByStatutTaskServiceInterface.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"injectables/TaskFacadeService.html":{},"modules/TasksModule.html":{}}}],["un",{"_index":205,"title":{},"body":{"components/MainTaskComponent.html":{}}}],["une",{"_index":300,"title":{},"body":{"classes/TaskModel.html":{}}}],["unit",{"_index":460,"title":{},"body":{"index.html":{}}}],["use",{"_index":452,"title":{},"body":{"index.html":{}}}],["v",{"_index":411,"title":{},"body":{"index.html":{}}}],["value",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/ByStatutTaskListService.html":{},"injectables/CRUDTaskListService.html":{},"components/MainTaskComponent.html":{},"pipes/TaskDateFormatPipe.html":{},"injectables/TaskFacadeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/MainTaskComponent.html":{},"components/TaskComponent.html":{},"components/TaskListComponent.html":{}}}],["variable",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":493,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":403,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":464,"title":{},"body":{"index.html":{}}}],["vidange",{"_index":146,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["void",{"_index":184,"title":{},"body":{"components/MainTaskComponent.html":{},"directives/TaskStateColorDirective.html":{}}}],["voisin",{"_index":153,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["voiture",{"_index":143,"title":{},"body":{"injectables/CRUDTaskListService.html":{}}}],["yarn",{"_index":424,"title":{},"body":{"index.html":{}}}],["yellow",{"_index":327,"title":{},"body":{"directives/TaskStateColorDirective.html":{}}}],["yyyy",{"_index":247,"title":{},"body":{"pipes/TaskDateFormatPipe.html":{}}}],["zone.js",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":339,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                TasksModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'task-manager'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport {TasksModule} from \"./tasks/tasks.module\";\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  // Import des component en architecture standalone\n  //imports: [RouterOutlet, TaskComponent, MainTaskComponent, TaskListComponent],\n  // Import des modules en architecture module\n  imports: [RouterOutlet, TasksModule],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'task-manager';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MainTaskComponent', 'selector': 'app-main-task'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskListComponent', 'selector': 'app-task-list'}];\n    var DIRECTIVES = [{'name': 'TaskStateColorDirective', 'selector': '[appTaskStateColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ByStatutTaskListService.html":{"url":"injectables/ByStatutTaskListService.html","title":"injectable - ByStatutTaskListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ByStatutTaskListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/service/by-statut-task-list-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                crudTaskListService\n                            \n                            \n                                tasksByStatus\n                            \n                            \n                                tempTaskList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTaskListByStatut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/service/by-statut-task-list-service.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskListByStatut\n                        \n                    \n                \n            \n            \n                \ngetTaskListByStatut(etats: Etat[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/service/by-statut-task-list-service.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                etats\n                                            \n                                                            Etat[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TaskModel[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        crudTaskListService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CRUDTaskListService\n\n                    \n                \n                \n                    \n                        Default value : inject(CRUDTaskListService)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/service/by-statut-task-list-service.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasksByStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskModel[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/service/by-statut-task-list-service.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempTaskList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskModel[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/service/by-statut-task-list-service.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {inject, Injectable} from '@angular/core';\nimport {TasksModule} from \"../tasks.module\";\nimport {CRUDTaskListService} from \"./crudtask-list-service.service\";\nimport {Etat, TaskModel} from \"../model/task.model\";\nimport {ByStatutTaskServiceInterface} from \"../interface/by-statut-task-service-interface\";\n\n// Service de récupération du liste de tâches filtrées sur leur état\n@Injectable({\n  providedIn: TasksModule\n})\n\nexport class ByStatutTaskListService implements ByStatutTaskServiceInterface {\n  // Liste temporaire de toutes les tâches\n  tempTaskList!: TaskModel[];\n  // Liste des tâches filtrées sur leur statut\n  tasksByStatus!: TaskModel[];\n\n\n  // Implémentation du service CRUD sur les tâches\n  crudTaskListService: CRUDTaskListService = inject(CRUDTaskListService);\n\n  constructor() {}\n\n\n  // Obtention d'une liste de tâches filtrées sur leur état\n  getTaskListByStatut(etats: Etat[]): TaskModel[] {\n    this.tempTaskList = this.crudTaskListService.getData();\n    this.tasksByStatus = [];\n\n    this.tempTaskList.forEach(task => {\n      if(etats.includes(task.etat)) {\n        this.tasksByStatus.push(task);\n      }\n    });\n\n    return this.tasksByStatus;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ByStatutTaskServiceInterface.html":{"url":"interfaces/ByStatutTaskServiceInterface.html","title":"interface - ByStatutTaskServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ByStatutTaskServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interface/by-statut-task-service-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getTaskListByStatut\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskListByStatut\n                        \n                    \n                \n            \n            \n                \ngetTaskListByStatut(etats: Etat[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/interface/by-statut-task-service-interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                etats\n                                            \n                                                            Etat[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TaskModel[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Etat, TaskModel} from \"../model/task.model\";\n\n// Interface du service de filtre des tâches sur leur état\nexport interface ByStatutTaskServiceInterface {\n  getTaskListByStatut(etats: Etat[]): TaskModel[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CRUDTaskListService.html":{"url":"injectables/CRUDTaskListService.html","title":"injectable - CRUDTaskListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CRUDTaskListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/service/crudtask-list-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/service/crudtask-list-service.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/service/crudtask-list-service.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         TaskModel[]\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskModel[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {titre: 'Banque', description: 'rib à éditer', date: new Date(), etat: Etat.A_FAIRE},\n    {titre: 'Voiture', description: 'faire la vidange', date: new Date(), etat: Etat.EN_COURS},\n    {titre: 'Bricolage', description: 'monter meubles sbd', date: new Date(), etat: Etat.TERMINEE},\n    {titre: 'Voisin', description: 'devis mur mitoyen', date: new Date(), etat: Etat.TERMINEE}\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/service/crudtask-list-service.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {TasksModule} from \"../tasks.module\";\nimport {Etat, TaskModel} from \"../model/task.model\";\nimport {CRUDTaskServiceInterface} from \"../interface/crudtask-service-interface\";\n\n// Service de CRUD sur les tâches\n@Injectable({\n  providedIn: TasksModule\n})\nexport class CRUDTaskListService implements CRUDTaskServiceInterface {\n  // Jeu de données\n  public data: TaskModel[] = [\n    {titre: 'Banque', description: 'rib à éditer', date: new Date(), etat: Etat.A_FAIRE},\n    {titre: 'Voiture', description: 'faire la vidange', date: new Date(), etat: Etat.EN_COURS},\n    {titre: 'Bricolage', description: 'monter meubles sbd', date: new Date(), etat: Etat.TERMINEE},\n    {titre: 'Voisin', description: 'devis mur mitoyen', date: new Date(), etat: Etat.TERMINEE}\n  ]\n\n  constructor() {}\n\n  // GET\n  getData(): TaskModel[] {\n    return this.data;\n  }\n\n  /*\n  // POST\n  postTask(): {}\n\n  // PUT\n  putTask(): {}\n\n  //DELETE\n  deleteTask(): {}\n  */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CRUDTaskServiceInterface.html":{"url":"interfaces/CRUDTaskServiceInterface.html","title":"interface - CRUDTaskServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CRUDTaskServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interface/crudtask-service-interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getData\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/interface/crudtask-service-interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         TaskModel[]\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {TaskModel} from \"../model/task.model\";\n\n// Interface du service CRUD\nexport interface CRUDTaskServiceInterface {\n  getData(): TaskModel[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainTaskComponent.html":{"url":"components/MainTaskComponent.html","title":"component - MainTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/main-task/main-task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-task\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./main-task.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-task.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                archivedTaskList\n                            \n                            \n                                archivedTasks\n                            \n                            \n                                taskFacade\n                            \n                            \n                                taskList\n                            \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/main-task/main-task.component.ts:28\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/main-task/main-task.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        archivedTaskList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskListModel\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/main-task/main-task.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        archivedTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskModel[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/main-task/main-task.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskFacadeService\n\n                    \n                \n                \n                    \n                        Default value : inject(TaskFacadeService)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/main-task/main-task.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskListModel\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/main-task/main-task.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskModel[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/main-task/main-task.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, inject, OnInit} from '@angular/core';\nimport {Etat, TaskModel} from \"../model/task.model\";\nimport {TaskListModel} from \"../model/taskList.model\";\nimport {TaskFacadeService} from \"../service/task-facade.service\";\n\n// Smart component de gestion métier, se basant sur les dumb components task et task-list\n@Component({\n  selector: 'app-main-task',\n  // Architecture standalone\n  /*standalone: true,\n  imports: [\n    TaskListComponent\n  ],*/\n  templateUrl: './main-task.component.html',\n  styleUrl: './main-task.component.css'\n})\n\nexport class MainTaskComponent implements OnInit {\n  // Liste des tâches à faire et en cours\n  taskList!: TaskListModel;\n  tasks!: TaskModel[];\n\n  // Liste des tâches terminées\n  archivedTaskList!: TaskListModel;\n  archivedTasks!: TaskModel[];\n\n  // Implémentation du service facade (un seul service appelé ; ce dernier regroupe les services nécessaire)\n  taskFacade: TaskFacadeService = inject(TaskFacadeService);\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.tasks = this.taskFacade.getTaskListByStatut([Etat.A_FAIRE, Etat.EN_COURS]);\n    this.taskList = {tasks: this.tasks}\n\n    this.archivedTasks = this.taskFacade.getTaskListByStatut([Etat.TERMINEE])\n    this.archivedTaskList = {tasks: this.archivedTasks}\n  }\n}\n\n    \n\n    \n        Encore du travail\n\n\nTravail terminé\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Encore du travailTravail terminé'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MainTaskComponent', 'selector': 'app-main-task'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskListComponent', 'selector': 'app-task-list'}];\n    var DIRECTIVES = [{'name': 'TaskStateColorDirective', 'selector': '[appTaskStateColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskComponent.html":{"url":"components/TaskComponent.html","title":"component - TaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task/task.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./task.component.html\n            \n\n\n\n            \n                styleUrl\n                ./task.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentTask\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentTask\n                    \n                \n                \n                    \n                        Type :         TaskModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task/task.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {TaskModel} from \"../model/task.model\";\n\n// Component d'une tâche\n@Component({\n  selector: 'app-task',\n  // Architecture standalone\n  /*standalone: true,\n  imports: [TaskStateColorDirective, TaskDateFormatPipe],*/\n  templateUrl: './task.component.html',\n  styleUrl: './task.component.css'\n})\n\nexport class TaskComponent {\n  @Input() currentTask!:TaskModel;\n}\n\n    \n\n    \n        \n  \n    {{currentTask.titre}}\n    le {{currentTask.date | taskDateFormat}}\n    Description: {{currentTask.description}}\n    {{currentTask.etat}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{currentTask.titre}}    le {{currentTask.date | taskDateFormat}}    Description: {{currentTask.description}}    {{currentTask.etat}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MainTaskComponent', 'selector': 'app-main-task'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskListComponent', 'selector': 'app-task-list'}];\n    var DIRECTIVES = [{'name': 'TaskStateColorDirective', 'selector': '[appTaskStateColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskDateFormatPipe.html":{"url":"pipes/TaskDateFormatPipe.html","title":"pipe - TaskDateFormatPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskDateFormatPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/task/task-date-format.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskDateFormat\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, format: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task/task-date-format.pipe.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"dd-MM-yyyy\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {DatePipe} from \"@angular/common\";\n\n// Pipe de formatage de la date\n@Pipe({\n  name: 'taskDateFormat',\n  // Architecture standalone\n  /*standalone: true*/\n})\nexport class TaskDateFormatPipe implements PipeTransform {\n\n  transform(value: any, format: string = \"dd-MM-yyyy\"): any {\n    const datePipe = new DatePipe('en-US');\n    return datePipe.transform(value, format);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskFacadeService.html":{"url":"injectables/TaskFacadeService.html","title":"injectable - TaskFacadeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskFacadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/service/task-facade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                byStatutTaskListService\n                            \n                            \n                                crudTaskListService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getTaskListByStatut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/service/task-facade.service.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/service/task-facade.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         TaskModel[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskListByStatut\n                        \n                    \n                \n            \n            \n                \ngetTaskListByStatut(etats: Etat[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/service/task-facade.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                etats\n                                            \n                                                            Etat[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TaskModel[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        byStatutTaskListService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ByStatutTaskListService\n\n                    \n                \n                \n                    \n                        Default value : inject(ByStatutTaskListService)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/service/task-facade.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crudTaskListService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CRUDTaskListService\n\n                    \n                \n                \n                    \n                        Default value : inject(CRUDTaskListService)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/service/task-facade.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {inject, Injectable} from '@angular/core';\nimport {TasksModule} from \"../tasks.module\";\nimport {CRUDTaskListService} from \"./crudtask-list-service.service\";\nimport {ByStatutTaskListService} from \"./by-statut-task-list-service.service\";\nimport {Etat, TaskModel} from \"../model/task.model\";\n\n/* Service regroupant tous les besoins du module ; le smart component\nne sollicite que la facade et plus chacun des services*/\n@Injectable({\n  providedIn: TasksModule\n})\nexport class TaskFacadeService {\n  // Service CRUD\n  crudTaskListService: CRUDTaskListService = inject(CRUDTaskListService);\n  // Service de filtre des taches sur leur état\n  byStatutTaskListService: ByStatutTaskListService = inject(ByStatutTaskListService);\n\n  // Obtenir la liste complète des tâches\n  getData(): TaskModel[] {\n    return this.crudTaskListService.getData();\n  }\n\n  // Obtenir la liste des taches filtrées sur leur statut(s)\n  getTaskListByStatut(etats: Etat[]): TaskModel[] {\n    return this.byStatutTaskListService.getTaskListByStatut(etats);\n  }\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListComponent.html":{"url":"components/TaskListComponent.html","title":"component - TaskListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task-list/task-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./task-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./task-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentTaskList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentTaskList\n                    \n                \n                \n                    \n                        Type :         TaskListModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task-list/task-list.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {TaskListModel} from \"../model/taskList.model\";\n\n// Component de liste de tache\n@Component({\n  selector: 'app-task-list',\n  // Architecture standalone\n  /*standalone: true,\n  imports: [TaskComponent],*/\n  templateUrl: './task-list.component.html',\n  styleUrl: './task-list.component.css'\n})\n\nexport class TaskListComponent {\n  @Input() currentTaskList!: TaskListModel;\n}\n\n\n\n\n    \n\n    \n        \n\n  @for (task of currentTaskList.tasks ; track $index) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for (task of currentTaskList.tasks ; track $index) {      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MainTaskComponent', 'selector': 'app-main-task'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TaskListComponent', 'selector': 'app-task-list'}];\n    var DIRECTIVES = [{'name': 'TaskStateColorDirective', 'selector': '[appTaskStateColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskListModel.html":{"url":"classes/TaskListModel.html","title":"class - TaskListModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskListModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/model/taskList.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskListModel: TaskModel[])\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/model/taskList.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskListModel\n                                                  \n                                                        \n                                                                        TaskModel[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskModel[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/model/taskList.model.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {TaskModel} from \"./task.model\";\n\n// Modele de liste de tache\nexport class TaskListModel {\n  tasks!: TaskModel[];\n\n  constructor(taskListModel:TaskModel[]) {\n    this.tasks = taskListModel;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskModel.html":{"url":"classes/TaskModel.html","title":"class - TaskModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/model/task.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                description\n                            \n                            \n                                etat\n                            \n                            \n                                titre\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/model/task.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/model/task.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        etat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Etat\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/model/task.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/model/task.model.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TaskModel {\n  titre!: string;\n  description!: string;\n  date!: Date;\n  etat!: Etat;\n}\n\n// Etat possible pour une tache\nexport enum Etat {\n  EN_COURS = 'en cours',\n  A_FAIRE = 'à faire',\n  TERMINEE = 'terminée'\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TaskStateColorDirective.html":{"url":"directives/TaskStateColorDirective.html","title":"directive - TaskStateColorDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  TaskStateColorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/task/task-state-color.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appTaskStateColor]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appTaskStateColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task/task-state-color.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appTaskStateColor\n                    \n                \n                \n                    \n                        Type :         TaskModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/task/task-state-color.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task/task-state-color.directive.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        elRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task/task-state-color.directive.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Input, OnInit, Renderer2} from '@angular/core';\nimport {Etat, TaskModel} from \"../model/task.model\";\n\n// Directive de coloration de l'état d'une tâche\n@Directive({\n  selector: '[appTaskStateColor]',\n  // Architecture standalone\n  /*standalone: true*/\n})\nexport class TaskStateColorDirective implements OnInit {\n  @Input() appTaskStateColor!: TaskModel;\n  constructor(public elRef: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    switch(this.appTaskStateColor.etat) {\n      case Etat.A_FAIRE:\n        this.renderer.setStyle(this.elRef.nativeElement, 'background-color', 'red');\n        break;\n      case Etat.EN_COURS:\n        this.renderer.setStyle(this.elRef.nativeElement, 'background-color', 'yellow');\n        break;\n      case Etat.TERMINEE:\n        this.renderer.setStyle(this.elRef.nativeElement, 'background-color', 'green');\n        break;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nMainTaskComponent\n\nMainTaskComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nMainTaskComponent->TasksModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nTasksModule -->\n\nTaskComponent->TasksModule\n\n\n\n\n\nTaskDateFormatPipe\n\nTaskDateFormatPipe\n\nTasksModule -->\n\nTaskDateFormatPipe->TasksModule\n\n\n\n\n\nTaskListComponent\n\nTaskListComponent\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\n\n\nTaskStateColorDirective\n\nTaskStateColorDirective\n\nTasksModule -->\n\nTaskStateColorDirective->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\nByStatutTaskListService\n\nByStatutTaskListService\n\nTasksModule -->\n\nByStatutTaskListService->TasksModule\n\n\n\n\n\nCRUDTaskListService\n\nCRUDTaskListService\n\nTasksModule -->\n\nCRUDTaskListService->TasksModule\n\n\n\n\n\nTaskFacadeService\n\nTaskFacadeService\n\nTasksModule -->\n\nTaskFacadeService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainTaskComponent\n                        \n                        \n                            TaskComponent\n                        \n                        \n                            TaskDateFormatPipe\n                        \n                        \n                            TaskListComponent\n                        \n                        \n                            TaskStateColorDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ByStatutTaskListService\n                        \n                        \n                            CRUDTaskListService\n                        \n                        \n                            TaskFacadeService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TasksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TasksRoutingModule } from './tasks-routing.module';\nimport {TaskComponent} from \"./task/task.component\";\nimport {TaskListComponent} from \"./task-list/task-list.component\";\nimport {MainTaskComponent} from \"./main-task/main-task.component\";\nimport {TaskStateColorDirective} from \"./task/task-state-color.directive\";\nimport {TaskDateFormatPipe} from \"./task/task-date-format.pipe\";\nimport {CRUDTaskListService} from \"./service/crudtask-list-service.service\";\nimport {ByStatutTaskListService} from \"./service/by-statut-task-list-service.service\";\nimport {TaskFacadeService} from \"./service/task-facade.service\";\n\n// Module de gestion des listes de tâches\n@NgModule({\n  // Components, directives, pipes\n  declarations: [TaskComponent, TaskListComponent, MainTaskComponent, TaskStateColorDirective, TaskDateFormatPipe],\n  imports: [\n    CommonModule,\n    TasksRoutingModule,\n  ],\n  // Services\n  providers: [CRUDTaskListService, ByStatutTaskListService, TaskFacadeService]\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {MainTaskComponent} from \"./main-task/main-task.component\";\n\nconst routes: Routes = [{path:'', component: MainTaskComponent}];\n\n// Routing pour le module tasks\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TasksRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/interface/by-statut-task-service-interface.ts\n            \n            interface\n            ByStatutTaskServiceInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/tasks/interface/crudtask-service-interface.ts\n            \n            interface\n            CRUDTaskServiceInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/tasks/main-task/main-task.component.ts\n            \n            component\n            MainTaskComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tasks/model/task.model.ts\n            \n            class\n            TaskModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tasks/model/taskList.model.ts\n            \n            class\n            TaskListModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tasks/service/by-statut-task-list-service.service.ts\n            \n            injectable\n            ByStatutTaskListService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/service/crudtask-list-service.service.ts\n            \n            injectable\n            CRUDTaskListService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/service/task-facade.service.ts\n            \n            injectable\n            TaskFacadeService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/task-list/task-list.component.ts\n            \n            component\n            TaskListComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/tasks/task/task-date-format.pipe.ts\n            \n            pipe\n            TaskDateFormatPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/task/task-state-color.directive.ts\n            \n            directive\n            TaskStateColorDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tasks/task/task.component.ts\n            \n            component\n            TaskComponent\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Etat   (src/.../task.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tasks/model/task.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Etat\n                    \n                \n                        \n                            \n                                 EN_COURS\n                            \n                        \n                        \n                            \n                                Value : en cours\n                            \n                        \n                        \n                            \n                                 A_FAIRE\n                            \n                        \n                        \n                            \n                                Value : à faire\n                            \n                        \n                        \n                            \n                                 TERMINEE\n                            \n                        \n                        \n                            \n                                Value : terminée\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTaskManager\nThis project was generated with Angular CLI version 18.2.2.\nNotes personnelles\nPrérequis\nnode déjà installé node -v 20.16.0\nnpm déjà installé npm -v 10.8.1\ninstallation d'angular clientnpm i -g @angular/cli 18.2.2\ncréation du projet task-manager avec PhpStorm\nYARN\ninstallation de yarn npm i -g yarn\nDemarrage\nlancer l'app ng serve\ninstallation de compodoc (génération de doc) yarn add --dev @compodoc/compodoc\najouter le script et démarrer npm run compodoc\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nMainTaskComponent\n\nMainTaskComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nMainTaskComponent->TasksModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nTasksModule -->\n\nTaskComponent->TasksModule\n\n\n\n\n\nTaskDateFormatPipe\n\nTaskDateFormatPipe\n\nTasksModule -->\n\nTaskDateFormatPipe->TasksModule\n\n\n\n\n\nTaskListComponent\n\nTaskListComponent\n\nTasksModule -->\n\nTaskListComponent->TasksModule\n\n\n\n\n\nTaskStateColorDirective\n\nTaskStateColorDirective\n\nTasksModule -->\n\nTaskStateColorDirective->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\nByStatutTaskListService\n\nByStatutTaskListService\n\nTasksModule -->\n\nByStatutTaskListService->TasksModule\n\n\n\n\n\nCRUDTaskListService\n\nCRUDTaskListService\n\nTasksModule -->\n\nCRUDTaskListService->TasksModule\n\n\n\n\n\nTaskFacadeService\n\nTaskFacadeService\n\nTasksModule -->\n\nTaskFacadeService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
